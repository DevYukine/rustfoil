on: [push, pull_request, release]

name: Build

env:
    CARGO_TERM_COLOR: always

jobs:
    linux:
        name: Linux Build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                target:
                    - name: i686-unknown-linux-gnu
                      arch: x86
                    - name: x86_64-unknown-linux-gnu
                      arch: x64
        steps:
            - name: Checkout Source code
              uses: actions/checkout@v2
            - name: Cache Rust dependencies
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ matrix.target.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Install Rust Toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: ${{ matrix.target.name }}
                  override: true
            - name: Install Build-Tools
              run: sudo apt-get install build-essential gcc-multilib
            - name: Build
              uses: actions-rs/cargo@v1
              env:
                  TARGET_CC: clang
              with:
                  command: build
                  args: --release --target=${{ matrix.target.name }}
            - name: Upload Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: rustfoil_${{ runner.OS }}_${{ matrix.target.arch }}
                  path: target/${{ matrix.target.name }}/release/rustfoil

    windows:
        name: Windows Build
        runs-on: windows-latest
        strategy:
            matrix:
                target:
                    - name: i686-pc-windows-msvc
                      arch: x86
                    - name: x86_64-pc-windows-msvc
                      arch: x64
        steps:
            - name: Checkout Source code
              uses: actions/checkout@v2
            - name: Cache Rust dependencies
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ matrix.target.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Install Rust Toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: ${{ matrix.target.name }}
                  override: true
            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --release --target=${{ matrix.target.name }}
            - name: Upload Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: rustfoil_${{ runner.OS }}_${{ matrix.target.arch }}.exe
                  path: target/${{ matrix.target.name }}/release/rustfoil.exe
